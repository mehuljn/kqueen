swagger: "2.0"

info:
  version: "0.1"
  title: Kubernetes Queen API
  description: A simple API to interact with Kubernetes clusters

schemes:
  - http
  - https

securityDefinitions:
  JWT:
    type: apiKey
    name: "Authorization"
    in: header

security:
  - JWT: []

basePath: /api/v1

definitions:
  getCluster:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      name:
        type: "string"
      provisioner:
        $ref: "#/definitions/getProvisioner"
      state:
        type: "string"
        enum:
          - "OK"
          - "Error"
          - "Deploying"
          - "Destroying"
          - "Unknown"
      kubeconfig:
        type: "string"
      metadata:
        type: "string"
  getProvisioner:
    type: "object"
    properties:
      id:
        type: "string"
        format: "uuid"
      name:
        type: "string"
      engine:
        type: "string"
      state:
        type: "string"
        enum:
          - "OK"
          - "Error"
          - "Not Reachable"
      parameters:
        description: "Engine-specific parameters"
        type: "object"

paths:
  # auth
  /auth:
    post:
      summary: "Authentication URL which returns JWT tokens"
      security: []
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful authentication"
          schema:
            type: "object"
            properties:
              access_token:
                type: string
                description: "JWT token"
        "401":
          description: "Authorization information is missing or invalid."
      parameters:
        - name: "body"
          in: "body"
          required: true
          schema:
            type: "object"
            properties:
              username:
                type: "string"
                example: "admin"
              password:
                type: "string"
                example: "default"
  # clusters
  /clusters:
    get:
      summary: List all clusters
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/getCluster"

  /clusters/{id}:
    get:
      summary: Get information about cluster
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/getCluster"
        400:
          description: "Invalid id supplied"
        404:
          description: "Cluster not found"
    delete:
      summary: "Delete cluster"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid id supplied"
        404:
          description: "Cluster not found"

  # provisioners
  /provisioners:
    get:
      summary: List all provisioners
      produces:
        - "application/json"
      responses:
        200:
          description: "Successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/getProvisioner"

  /provisioners/{id}:
    get:
      summary: Get information about provisioner
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/getProvisioner"
        400:
          description: "Invalid id supplied"
        404:
          description: "Cluster not found"
    delete:
      summary: "Delete provisioner"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: string
      responses:
        200:
          description: "Successful operation"
        400:
          description: "Invalid id supplied"
        404:
          description: "Cluster not found"
