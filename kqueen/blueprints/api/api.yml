openapi: "3.0.0"

info:
  version: "0.1"
  title: Kubernetes Queen API
  description: A simple API to interact with Kubernetes clusters

servers:
  - url: "http://localhost:5000/api/v1"
    description: "Development server"

components:
  securitySchemes:
    JWT:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
  schemas:
    statusUnauthorized:
      type: "object"
      properties:
        description:
          type: "string"
          description: "Error description"
          example: "Invalid credentials"
        error:
          type: "string"
          description: "HTTP error"
          example: "Bad Request"
        status_code:
          type: "integer"
          description: "HTTP error code"
          example: 401
    statusBadRequest:
      type: "object"
      properties:
        code:
          type: "integer"
          example: 401
        message:
          type: "string"
          example: "Bad request"
    Organization:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          type: "string"
        namespace:
          type: "string"
    getUser:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        username:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        organization:
          $ref: "#/components/schemas/Organization"
    postUser:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        username:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        organization:
          type: "string"
          description: "Reference to related Organization"
          example: "Organization:<uuid>"
    getCluster:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          type: "string"
        provisioner:
          $ref: "#/components/schemas/Provisioner"
        state:
          type: "string"
          enum:
            - "OK"
            - "Error"
            - "Deploying"
            - "Destroying"
            - "Unknown"
        kubeconfig:
          type: "string"
        metadata:
          type: "string"
    postCluster:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          type: "string"
        provisioner:
          type: "string"
          description: "Reference to related Provisioner"
          example: "Provisioner:<uuid>"
        state:
          type: "string"
          enum:
            - "OK"
            - "Error"
            - "Deploying"
            - "Destroying"
            - "Unknown"
        kubeconfig:
          type: "string"
        metadata:
          type: "string"
    Provisioner:
      type: "object"
      properties:
        id:
          type: "string"
          format: "uuid"
        name:
          type: "string"
        engine:
          type: "string"
        state:
          type: "string"
          enum:
            - "OK"
            - "Error"
            - "Not Reachable"
        parameters:
          description: "Engine-specific parameters"
          type: "object"

security:
  - JWT: []

paths:
  # auth
  /auth:
    post:
      summary: "Authentication URL which returns JWT tokens"
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                username:
                  type: "string"
                  example: "admin"
                password:
                  type: "string"
                  example: "default"
      responses:
        "200":
          description: "Successful authentication"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  access_token:
                    type: "string"
                    description: "JWT token"
        "400":
          description: "Bad request"
          content:
            text/html:
              schema:
                type: "html"
                example: "<html><body><title>400 Bad Request</title><h1>Bad Request</h1><p>Failed to decode JSON object: Expecting ',' delimiter: line 1 column 48 (char 47)</p></body></html>"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
  # organizations
  /organizations:
    get:
      summary: "List all Organizations"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Organization"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
    post:
      summary: "Create new Organization"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "400":
          description: "Request body is not valid JSON."
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
  /organizations/{id}:
    get:
      summary: "Get information about target Organization"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Invalid ID or Organization not found"
    patch:
      summary: "Update data of target Organization"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Invalid ID or Organization not found"
    delete:
      summary: "Delete target Organization"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "string"
                    format: "uuid"
                  state:
                    type: "string"
                    example: "deleted"
        "400":
          description: "Invalid ID supplied"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Organization not found"
        "500":
          description: "Could not delete Organization"
  # users
  /users:
    get:
      summary: "List all Users"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/getUser"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
    post:
      summary: "Create new User"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postUser"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getUser"
        "400":
          description: "Request body is not valid JSON."
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
  /users/{id}:
    get:
      summary: "Get information about target User"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getUser"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Invalid ID or User not found"
    patch:
      summary: "Update data of target User"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postUser"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getUser"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Invalid ID or User not found"
    delete:
      summary: "Delete target User"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "string"
                    format: "uuid"
                  state:
                    type: "string"
                    example: "deleted"
        "400":
          description: "Invalid ID supplied"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "User not found"
        "500":
          description: "Could not delete User"
  # clusters
  /clusters:
    get:
      summary: "List all Clusters"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/getCluster"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
    post:
      summary: "Create new Cluster"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postCluster"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getCluster"
        "400":
          description: "Request body is not valid JSON."
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
  /clusters/{id}:
    get:
      summary: "Get information about target Cluster"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getCluster"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Invalid ID or Cluster not found"
    patch:
      summary: "Update data of target Cluster"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postCluster"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getCluster"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Invalid ID or Cluster not found"
    delete:
      summary: "Delete target Cluster"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "string"
                    format: "uuid"
                  state:
                    type: "string"
                    example: "deleted"
        "400":
          description: "Invalid ID supplied"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Cluster not found"
        "500":
          description: "Could not delete Cluster"
  # provisioners
  /provisioners:
    get:
      summary: "List all Provisioners"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Provisioner"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
    post:
      summary: "Create new Provisioner"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Provisioner"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Provisioner"
        "400":
          description: "Request body is not valid JSON."
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
  /provisioners/{id}:
    get:
      summary: "Get information about target Provisioner"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Provisioner"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Invalid ID or Provisioner not found"
    patch:
      summary: "Update data of target Provisioner"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Provisioner"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Provisioner"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Invalid ID or Provisioner not found"
    delete:
      summary: "Delete target Provisioner"
      parameters:
        - name: "id"
          in: "path"
          required: true
          type: "string"
          format: "uuid"
      responses:
        "200":
          description: "Successful operation"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  id:
                    type: "string"
                    format: "uuid"
                  state:
                    type: "string"
                    example: "deleted"
        "400":
          description: "Invalid ID supplied"
        "401":
          description: "Authorization information is missing or invalid."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/statusUnauthorized"
        "404":
          description: "Provisioner not found"
        "500":
          description: "Could not delete Provisioner"

